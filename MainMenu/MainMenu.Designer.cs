//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MainMenu", "ParticipantParticipantExternalStudyAssociative", "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Participant), "ParticipantExternalStudyAssociative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.ParticipantExternalStudyAssociative), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "AssesorParticipant", "Assesor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Assesor), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.Participant), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "AssesorStudy", "Assesor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Assesor), "Study", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.Study), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "ParticipantTaskInstance", "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Participant), "TaskInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.TaskInstance), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "ExternalStudyParticipantExternalStudyAssociative", "ExternalStudy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.ExternalStudy), "ParticipantExternalStudyAssociative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.ParticipantExternalStudyAssociative), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "StudyTaskInstance", "Study", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Study), "TaskInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.TaskInstance), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "SiteStudy", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Site), "Study", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.Study), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "TaskTypeTaskInstance", "TaskType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.TaskType), "TaskInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.TaskInstance), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "TaskInstanceTaskData", "TaskInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.TaskInstance), "TaskData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.TaskData), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "StudyParticipant", "Study", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Study), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.Participant), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "SiteParticipant", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Site), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.Participant), true)]
[assembly: EdmRelationshipAttribute("MainMenu", "SiteTaskData", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainMenu_bran.Site), "TaskData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainMenu_bran.TaskData), true)]

#endregion

namespace MainMenu_bran
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MainMenuContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MainMenuContainer object using the connection string found in the 'MainMenuContainer' section of the application configuration file.
        /// </summary>
        public MainMenuContainer() : base("name=MainMenuContainer", "MainMenuContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MainMenuContainer object.
        /// </summary>
        public MainMenuContainer(string connectionString) : base(connectionString, "MainMenuContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MainMenuContainer object.
        /// </summary>
        public MainMenuContainer(EntityConnection connection) : base(connection, "MainMenuContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Participant> Participants
        {
            get
            {
                if ((_Participants == null))
                {
                    _Participants = base.CreateObjectSet<Participant>("Participants");
                }
                return _Participants;
            }
        }
        private ObjectSet<Participant> _Participants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParticipantExternalStudyAssociative> ParticipantExternalStudyAssociatives
        {
            get
            {
                if ((_ParticipantExternalStudyAssociatives == null))
                {
                    _ParticipantExternalStudyAssociatives = base.CreateObjectSet<ParticipantExternalStudyAssociative>("ParticipantExternalStudyAssociatives");
                }
                return _ParticipantExternalStudyAssociatives;
            }
        }
        private ObjectSet<ParticipantExternalStudyAssociative> _ParticipantExternalStudyAssociatives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExternalStudy> ExternalStudies
        {
            get
            {
                if ((_ExternalStudies == null))
                {
                    _ExternalStudies = base.CreateObjectSet<ExternalStudy>("ExternalStudies");
                }
                return _ExternalStudies;
            }
        }
        private ObjectSet<ExternalStudy> _ExternalStudies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskInstance> TaskInstances
        {
            get
            {
                if ((_TaskInstances == null))
                {
                    _TaskInstances = base.CreateObjectSet<TaskInstance>("TaskInstances");
                }
                return _TaskInstances;
            }
        }
        private ObjectSet<TaskInstance> _TaskInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Assesor> Assesors
        {
            get
            {
                if ((_Assesors == null))
                {
                    _Assesors = base.CreateObjectSet<Assesor>("Assesors");
                }
                return _Assesors;
            }
        }
        private ObjectSet<Assesor> _Assesors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Study> Studies
        {
            get
            {
                if ((_Studies == null))
                {
                    _Studies = base.CreateObjectSet<Study>("Studies");
                }
                return _Studies;
            }
        }
        private ObjectSet<Study> _Studies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Site> Sites
        {
            get
            {
                if ((_Sites == null))
                {
                    _Sites = base.CreateObjectSet<Site>("Sites");
                }
                return _Sites;
            }
        }
        private ObjectSet<Site> _Sites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskType> TaskTypes
        {
            get
            {
                if ((_TaskTypes == null))
                {
                    _TaskTypes = base.CreateObjectSet<TaskType>("TaskTypes");
                }
                return _TaskTypes;
            }
        }
        private ObjectSet<TaskType> _TaskTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskData> TaskDatas
        {
            get
            {
                if ((_TaskDatas == null))
                {
                    _TaskDatas = base.CreateObjectSet<TaskData>("TaskDatas");
                }
                return _TaskDatas;
            }
        }
        private ObjectSet<TaskData> _TaskDatas;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Participants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParticipants(Participant participant)
        {
            base.AddObject("Participants", participant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParticipantExternalStudyAssociatives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParticipantExternalStudyAssociatives(ParticipantExternalStudyAssociative participantExternalStudyAssociative)
        {
            base.AddObject("ParticipantExternalStudyAssociatives", participantExternalStudyAssociative);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExternalStudies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExternalStudies(ExternalStudy externalStudy)
        {
            base.AddObject("ExternalStudies", externalStudy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskInstances(TaskInstance taskInstance)
        {
            base.AddObject("TaskInstances", taskInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assesors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssesors(Assesor assesor)
        {
            base.AddObject("Assesors", assesor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Studies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudies(Study study)
        {
            base.AddObject("Studies", study);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSites(Site site)
        {
            base.AddObject("Sites", site);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskTypes(TaskType taskType)
        {
            base.AddObject("TaskTypes", taskType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskDatas(TaskData taskData)
        {
            base.AddObject("TaskDatas", taskData);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="Assesor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Assesor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Assesor object.
        /// </summary>
        /// <param name="assesorId">Initial value of the AssesorId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="assesorName">Initial value of the AssesorName property.</param>
        /// <param name="assesorTitle">Initial value of the AssesorTitle property.</param>
        public static Assesor CreateAssesor(global::System.Int32 assesorId, global::System.String userName, global::System.String password, global::System.String assesorName, global::System.String assesorTitle)
        {
            Assesor assesor = new Assesor();
            assesor.AssesorId = assesorId;
            assesor.UserName = userName;
            assesor.Password = password;
            assesor.AssesorName = assesorName;
            assesor.AssesorTitle = assesorTitle;
            return assesor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssesorId
        {
            get
            {
                return _AssesorId;
            }
            set
            {
                if (_AssesorId != value)
                {
                    OnAssesorIdChanging(value);
                    ReportPropertyChanging("AssesorId");
                    _AssesorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssesorId");
                    OnAssesorIdChanged();
                }
            }
        }
        private global::System.Int32 _AssesorId;
        partial void OnAssesorIdChanging(global::System.Int32 value);
        partial void OnAssesorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssesorName
        {
            get
            {
                return _AssesorName;
            }
            set
            {
                OnAssesorNameChanging(value);
                ReportPropertyChanging("AssesorName");
                _AssesorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssesorName");
                OnAssesorNameChanged();
            }
        }
        private global::System.String _AssesorName;
        partial void OnAssesorNameChanging(global::System.String value);
        partial void OnAssesorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssesorTitle
        {
            get
            {
                return _AssesorTitle;
            }
            set
            {
                OnAssesorTitleChanging(value);
                ReportPropertyChanging("AssesorTitle");
                _AssesorTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssesorTitle");
                OnAssesorTitleChanged();
            }
        }
        private global::System.String _AssesorTitle;
        partial void OnAssesorTitleChanging(global::System.String value);
        partial void OnAssesorTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessorEmail
        {
            get
            {
                return _AssessorEmail;
            }
            set
            {
                OnAssessorEmailChanging(value);
                ReportPropertyChanging("AssessorEmail");
                _AssessorEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssessorEmail");
                OnAssessorEmailChanged();
            }
        }
        private global::System.String _AssessorEmail;
        partial void OnAssessorEmailChanging(global::System.String value);
        partial void OnAssessorEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnteredBy
        {
            get
            {
                return _EnteredBy;
            }
            set
            {
                OnEnteredByChanging(value);
                ReportPropertyChanging("EnteredBy");
                _EnteredBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnteredBy");
                OnEnteredByChanged();
            }
        }
        private global::System.String _EnteredBy;
        partial void OnEnteredByChanging(global::System.String value);
        partial void OnEnteredByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnteredTime
        {
            get
            {
                return _EnteredTime;
            }
            set
            {
                OnEnteredTimeChanging(value);
                ReportPropertyChanging("EnteredTime");
                _EnteredTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredTime");
                OnEnteredTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnteredTime;
        partial void OnEnteredTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEnteredTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedTime
        {
            get
            {
                return _UpdatedTime;
            }
            set
            {
                OnUpdatedTimeChanging(value);
                ReportPropertyChanging("UpdatedTime");
                _UpdatedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedTime");
                OnUpdatedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedTime;
        partial void OnUpdatedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeactivatedTime
        {
            get
            {
                return _DeactivatedTime;
            }
            set
            {
                OnDeactivatedTimeChanging(value);
                ReportPropertyChanging("DeactivatedTime");
                _DeactivatedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeactivatedTime");
                OnDeactivatedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeactivatedTime;
        partial void OnDeactivatedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDeactivatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AdminPrivileges
        {
            get
            {
                return _AdminPrivileges;
            }
            set
            {
                OnAdminPrivilegesChanging(value);
                ReportPropertyChanging("AdminPrivileges");
                _AdminPrivileges = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdminPrivileges");
                OnAdminPrivilegesChanged();
            }
        }
        private Nullable<global::System.Boolean> _AdminPrivileges;
        partial void OnAdminPrivilegesChanging(Nullable<global::System.Boolean> value);
        partial void OnAdminPrivilegesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "AssesorParticipant", "Participant")]
        public EntityCollection<Participant> Participants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("MainMenu.AssesorParticipant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("MainMenu.AssesorParticipant", "Participant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "AssesorStudy", "Study")]
        public EntityCollection<Study> Studies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Study>("MainMenu.AssesorStudy", "Study");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Study>("MainMenu.AssesorStudy", "Study", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="ExternalStudy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExternalStudy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalStudy object.
        /// </summary>
        /// <param name="externalStudyId">Initial value of the ExternalStudyId property.</param>
        /// <param name="externalStudyDesc">Initial value of the ExternalStudyDesc property.</param>
        public static ExternalStudy CreateExternalStudy(global::System.Int32 externalStudyId, global::System.String externalStudyDesc)
        {
            ExternalStudy externalStudy = new ExternalStudy();
            externalStudy.ExternalStudyId = externalStudyId;
            externalStudy.ExternalStudyDesc = externalStudyDesc;
            return externalStudy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExternalStudyId
        {
            get
            {
                return _ExternalStudyId;
            }
            set
            {
                if (_ExternalStudyId != value)
                {
                    OnExternalStudyIdChanging(value);
                    ReportPropertyChanging("ExternalStudyId");
                    _ExternalStudyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExternalStudyId");
                    OnExternalStudyIdChanged();
                }
            }
        }
        private global::System.Int32 _ExternalStudyId;
        partial void OnExternalStudyIdChanging(global::System.Int32 value);
        partial void OnExternalStudyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalStudyDesc
        {
            get
            {
                return _ExternalStudyDesc;
            }
            set
            {
                OnExternalStudyDescChanging(value);
                ReportPropertyChanging("ExternalStudyDesc");
                _ExternalStudyDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalStudyDesc");
                OnExternalStudyDescChanged();
            }
        }
        private global::System.String _ExternalStudyDesc;
        partial void OnExternalStudyDescChanging(global::System.String value);
        partial void OnExternalStudyDescChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "ExternalStudyParticipantExternalStudyAssociative", "ParticipantExternalStudyAssociative")]
        public EntityCollection<ParticipantExternalStudyAssociative> ParticipantExternalStudyAssociatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParticipantExternalStudyAssociative>("MainMenu.ExternalStudyParticipantExternalStudyAssociative", "ParticipantExternalStudyAssociative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParticipantExternalStudyAssociative>("MainMenu.ExternalStudyParticipantExternalStudyAssociative", "ParticipantExternalStudyAssociative", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="Participant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Participant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Participant object.
        /// </summary>
        /// <param name="participantId">Initial value of the ParticipantId property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="assesorId">Initial value of the AssesorId property.</param>
        /// <param name="studyId">Initial value of the StudyId property.</param>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        public static Participant CreateParticipant(global::System.Int32 participantId, global::System.Int16 age, global::System.String gender, global::System.DateTime effectiveDate, global::System.Int32 assesorId, global::System.Int32 studyId, global::System.Int32 siteId)
        {
            Participant participant = new Participant();
            participant.ParticipantId = participantId;
            participant.Age = age;
            participant.Gender = gender;
            participant.EffectiveDate = effectiveDate;
            participant.AssesorId = assesorId;
            participant.StudyId = studyId;
            participant.SiteId = siteId;
            return participant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                if (_ParticipantId != value)
                {
                    OnParticipantIdChanging(value);
                    ReportPropertyChanging("ParticipantId");
                    _ParticipantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParticipantId");
                    OnParticipantIdChanged();
                }
            }
        }
        private global::System.Int32 _ParticipantId;
        partial void OnParticipantIdChanging(global::System.Int32 value);
        partial void OnParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int16 _Age;
        partial void OnAgeChanging(global::System.Int16 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssesorId
        {
            get
            {
                return _AssesorId;
            }
            set
            {
                OnAssesorIdChanging(value);
                ReportPropertyChanging("AssesorId");
                _AssesorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssesorId");
                OnAssesorIdChanged();
            }
        }
        private global::System.Int32 _AssesorId;
        partial void OnAssesorIdChanging(global::System.Int32 value);
        partial void OnAssesorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyId
        {
            get
            {
                return _StudyId;
            }
            set
            {
                OnStudyIdChanging(value);
                ReportPropertyChanging("StudyId");
                _StudyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyId");
                OnStudyIdChanged();
            }
        }
        private global::System.Int32 _StudyId;
        partial void OnStudyIdChanging(global::System.Int32 value);
        partial void OnStudyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                OnSiteIdChanging(value);
                ReportPropertyChanging("SiteId");
                _SiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteId");
                OnSiteIdChanged();
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "ParticipantParticipantExternalStudyAssociative", "ParticipantExternalStudyAssociative")]
        public EntityCollection<ParticipantExternalStudyAssociative> ParticipantExternalStudyAssociatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParticipantExternalStudyAssociative>("MainMenu.ParticipantParticipantExternalStudyAssociative", "ParticipantExternalStudyAssociative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParticipantExternalStudyAssociative>("MainMenu.ParticipantParticipantExternalStudyAssociative", "ParticipantExternalStudyAssociative", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "AssesorParticipant", "Assesor")]
        public Assesor Assesor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assesor>("MainMenu.AssesorParticipant", "Assesor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assesor>("MainMenu.AssesorParticipant", "Assesor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Assesor> AssesorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assesor>("MainMenu.AssesorParticipant", "Assesor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Assesor>("MainMenu.AssesorParticipant", "Assesor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "ParticipantTaskInstance", "TaskInstance")]
        public EntityCollection<TaskInstance> TaskInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskInstance>("MainMenu.ParticipantTaskInstance", "TaskInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskInstance>("MainMenu.ParticipantTaskInstance", "TaskInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "StudyParticipant", "Study")]
        public Study Study
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("MainMenu.StudyParticipant", "Study").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("MainMenu.StudyParticipant", "Study").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Study> StudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("MainMenu.StudyParticipant", "Study");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Study>("MainMenu.StudyParticipant", "Study", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "SiteParticipant", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteParticipant", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteParticipant", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteParticipant", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("MainMenu.SiteParticipant", "Site", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="ParticipantExternalStudyAssociative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParticipantExternalStudyAssociative : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParticipantExternalStudyAssociative object.
        /// </summary>
        /// <param name="partExtStudyAssId">Initial value of the PartExtStudyAssId property.</param>
        /// <param name="extStudyParticipantId">Initial value of the ExtStudyParticipantId property.</param>
        /// <param name="participantId">Initial value of the ParticipantId property.</param>
        /// <param name="externalStudyId">Initial value of the ExternalStudyId property.</param>
        public static ParticipantExternalStudyAssociative CreateParticipantExternalStudyAssociative(global::System.Int32 partExtStudyAssId, global::System.String extStudyParticipantId, global::System.Int32 participantId, global::System.Int32 externalStudyId)
        {
            ParticipantExternalStudyAssociative participantExternalStudyAssociative = new ParticipantExternalStudyAssociative();
            participantExternalStudyAssociative.PartExtStudyAssId = partExtStudyAssId;
            participantExternalStudyAssociative.ExtStudyParticipantId = extStudyParticipantId;
            participantExternalStudyAssociative.ParticipantId = participantId;
            participantExternalStudyAssociative.ExternalStudyId = externalStudyId;
            return participantExternalStudyAssociative;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartExtStudyAssId
        {
            get
            {
                return _PartExtStudyAssId;
            }
            set
            {
                if (_PartExtStudyAssId != value)
                {
                    OnPartExtStudyAssIdChanging(value);
                    ReportPropertyChanging("PartExtStudyAssId");
                    _PartExtStudyAssId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartExtStudyAssId");
                    OnPartExtStudyAssIdChanged();
                }
            }
        }
        private global::System.Int32 _PartExtStudyAssId;
        partial void OnPartExtStudyAssIdChanging(global::System.Int32 value);
        partial void OnPartExtStudyAssIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtStudyParticipantId
        {
            get
            {
                return _ExtStudyParticipantId;
            }
            set
            {
                OnExtStudyParticipantIdChanging(value);
                ReportPropertyChanging("ExtStudyParticipantId");
                _ExtStudyParticipantId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExtStudyParticipantId");
                OnExtStudyParticipantIdChanged();
            }
        }
        private global::System.String _ExtStudyParticipantId;
        partial void OnExtStudyParticipantIdChanging(global::System.String value);
        partial void OnExtStudyParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                OnParticipantIdChanging(value);
                ReportPropertyChanging("ParticipantId");
                _ParticipantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParticipantId");
                OnParticipantIdChanged();
            }
        }
        private global::System.Int32 _ParticipantId;
        partial void OnParticipantIdChanging(global::System.Int32 value);
        partial void OnParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExternalStudyId
        {
            get
            {
                return _ExternalStudyId;
            }
            set
            {
                OnExternalStudyIdChanging(value);
                ReportPropertyChanging("ExternalStudyId");
                _ExternalStudyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExternalStudyId");
                OnExternalStudyIdChanged();
            }
        }
        private global::System.Int32 _ExternalStudyId;
        partial void OnExternalStudyIdChanging(global::System.Int32 value);
        partial void OnExternalStudyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "ParticipantParticipantExternalStudyAssociative", "Participant")]
        public Participant Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("MainMenu.ParticipantParticipantExternalStudyAssociative", "Participant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("MainMenu.ParticipantParticipantExternalStudyAssociative", "Participant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Participant> ParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("MainMenu.ParticipantParticipantExternalStudyAssociative", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Participant>("MainMenu.ParticipantParticipantExternalStudyAssociative", "Participant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "ExternalStudyParticipantExternalStudyAssociative", "ExternalStudy")]
        public ExternalStudy ExternalStudy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalStudy>("MainMenu.ExternalStudyParticipantExternalStudyAssociative", "ExternalStudy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalStudy>("MainMenu.ExternalStudyParticipantExternalStudyAssociative", "ExternalStudy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalStudy> ExternalStudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalStudy>("MainMenu.ExternalStudyParticipantExternalStudyAssociative", "ExternalStudy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalStudy>("MainMenu.ExternalStudyParticipantExternalStudyAssociative", "ExternalStudy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="Site")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Site : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Site object.
        /// </summary>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        /// <param name="siteTitle">Initial value of the SiteTitle property.</param>
        public static Site CreateSite(global::System.Int32 siteId, global::System.String siteTitle)
        {
            Site site = new Site();
            site.SiteId = siteId;
            site.SiteTitle = siteTitle;
            return site;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                if (_SiteId != value)
                {
                    OnSiteIdChanging(value);
                    ReportPropertyChanging("SiteId");
                    _SiteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteId");
                    OnSiteIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SiteTitle
        {
            get
            {
                return _SiteTitle;
            }
            set
            {
                OnSiteTitleChanging(value);
                ReportPropertyChanging("SiteTitle");
                _SiteTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SiteTitle");
                OnSiteTitleChanged();
            }
        }
        private global::System.String _SiteTitle;
        partial void OnSiteTitleChanging(global::System.String value);
        partial void OnSiteTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "SiteStudy", "Study")]
        public EntityCollection<Study> Studies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Study>("MainMenu.SiteStudy", "Study");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Study>("MainMenu.SiteStudy", "Study", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "SiteParticipant", "Participant")]
        public EntityCollection<Participant> Participants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("MainMenu.SiteParticipant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("MainMenu.SiteParticipant", "Participant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "SiteTaskData", "TaskData")]
        public EntityCollection<TaskData> TaskDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskData>("MainMenu.SiteTaskData", "TaskData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskData>("MainMenu.SiteTaskData", "TaskData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="Study")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Study : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Study object.
        /// </summary>
        /// <param name="studyId">Initial value of the StudyId property.</param>
        /// <param name="studyTitle">Initial value of the StudyTitle property.</param>
        /// <param name="examiner">Initial value of the Examiner property.</param>
        /// <param name="assesorId">Initial value of the AssesorId property.</param>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        public static Study CreateStudy(global::System.Int32 studyId, global::System.String studyTitle, global::System.String examiner, global::System.Int32 assesorId, global::System.Int32 siteId)
        {
            Study study = new Study();
            study.StudyId = studyId;
            study.StudyTitle = studyTitle;
            study.Examiner = examiner;
            study.AssesorId = assesorId;
            study.SiteId = siteId;
            return study;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyId
        {
            get
            {
                return _StudyId;
            }
            set
            {
                if (_StudyId != value)
                {
                    OnStudyIdChanging(value);
                    ReportPropertyChanging("StudyId");
                    _StudyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudyId");
                    OnStudyIdChanged();
                }
            }
        }
        private global::System.Int32 _StudyId;
        partial void OnStudyIdChanging(global::System.Int32 value);
        partial void OnStudyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StudyTitle
        {
            get
            {
                return _StudyTitle;
            }
            set
            {
                OnStudyTitleChanging(value);
                ReportPropertyChanging("StudyTitle");
                _StudyTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StudyTitle");
                OnStudyTitleChanged();
            }
        }
        private global::System.String _StudyTitle;
        partial void OnStudyTitleChanging(global::System.String value);
        partial void OnStudyTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Examiner
        {
            get
            {
                return _Examiner;
            }
            set
            {
                OnExaminerChanging(value);
                ReportPropertyChanging("Examiner");
                _Examiner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Examiner");
                OnExaminerChanged();
            }
        }
        private global::System.String _Examiner;
        partial void OnExaminerChanging(global::System.String value);
        partial void OnExaminerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssesorId
        {
            get
            {
                return _AssesorId;
            }
            set
            {
                OnAssesorIdChanging(value);
                ReportPropertyChanging("AssesorId");
                _AssesorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssesorId");
                OnAssesorIdChanged();
            }
        }
        private global::System.Int32 _AssesorId;
        partial void OnAssesorIdChanging(global::System.Int32 value);
        partial void OnAssesorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                OnSiteIdChanging(value);
                ReportPropertyChanging("SiteId");
                _SiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteId");
                OnSiteIdChanged();
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "AssesorStudy", "Assesor")]
        public Assesor Assesor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assesor>("MainMenu.AssesorStudy", "Assesor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assesor>("MainMenu.AssesorStudy", "Assesor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Assesor> AssesorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assesor>("MainMenu.AssesorStudy", "Assesor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Assesor>("MainMenu.AssesorStudy", "Assesor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "StudyTaskInstance", "TaskInstance")]
        public EntityCollection<TaskInstance> TaskInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskInstance>("MainMenu.StudyTaskInstance", "TaskInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskInstance>("MainMenu.StudyTaskInstance", "TaskInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "SiteStudy", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteStudy", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteStudy", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteStudy", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("MainMenu.SiteStudy", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "StudyParticipant", "Participant")]
        public EntityCollection<Participant> Participants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("MainMenu.StudyParticipant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("MainMenu.StudyParticipant", "Participant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="TaskData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskData object.
        /// </summary>
        /// <param name="taskDataId">Initial value of the TaskDataId property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventData">Initial value of the EventData property.</param>
        /// <param name="taskInstanceId">Initial value of the TaskInstanceId property.</param>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        public static TaskData CreateTaskData(global::System.Int32 taskDataId, global::System.DateTime time, global::System.String eventType, global::System.String eventData, global::System.Int32 taskInstanceId, global::System.Int32 siteId)
        {
            TaskData taskData = new TaskData();
            taskData.TaskDataId = taskDataId;
            taskData.Time = time;
            taskData.EventType = eventType;
            taskData.EventData = eventData;
            taskData.TaskInstanceId = taskInstanceId;
            taskData.SiteId = siteId;
            return taskData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskDataId
        {
            get
            {
                return _TaskDataId;
            }
            set
            {
                if (_TaskDataId != value)
                {
                    OnTaskDataIdChanging(value);
                    ReportPropertyChanging("TaskDataId");
                    _TaskDataId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskDataId");
                    OnTaskDataIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskDataId;
        partial void OnTaskDataIdChanging(global::System.Int32 value);
        partial void OnTaskDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventData
        {
            get
            {
                return _EventData;
            }
            set
            {
                OnEventDataChanging(value);
                ReportPropertyChanging("EventData");
                _EventData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventData");
                OnEventDataChanged();
            }
        }
        private global::System.String _EventData;
        partial void OnEventDataChanging(global::System.String value);
        partial void OnEventDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskInstanceId
        {
            get
            {
                return _TaskInstanceId;
            }
            set
            {
                OnTaskInstanceIdChanging(value);
                ReportPropertyChanging("TaskInstanceId");
                _TaskInstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskInstanceId");
                OnTaskInstanceIdChanged();
            }
        }
        private global::System.Int32 _TaskInstanceId;
        partial void OnTaskInstanceIdChanging(global::System.Int32 value);
        partial void OnTaskInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventSummary
        {
            get
            {
                return _EventSummary;
            }
            set
            {
                OnEventSummaryChanging(value);
                ReportPropertyChanging("EventSummary");
                _EventSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventSummary");
                OnEventSummaryChanged();
            }
        }
        private global::System.String _EventSummary;
        partial void OnEventSummaryChanging(global::System.String value);
        partial void OnEventSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                OnSiteIdChanging(value);
                ReportPropertyChanging("SiteId");
                _SiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteId");
                OnSiteIdChanged();
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "TaskInstanceTaskData", "TaskInstance")]
        public TaskInstance TaskInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskInstance>("MainMenu.TaskInstanceTaskData", "TaskInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskInstance>("MainMenu.TaskInstanceTaskData", "TaskInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskInstance> TaskInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskInstance>("MainMenu.TaskInstanceTaskData", "TaskInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskInstance>("MainMenu.TaskInstanceTaskData", "TaskInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "SiteTaskData", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteTaskData", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteTaskData", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("MainMenu.SiteTaskData", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("MainMenu.SiteTaskData", "Site", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="TaskInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskInstance object.
        /// </summary>
        /// <param name="taskInstanceId">Initial value of the TaskInstanceId property.</param>
        /// <param name="taskTitle">Initial value of the TaskTitle property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="participantId">Initial value of the ParticipantId property.</param>
        /// <param name="studyId">Initial value of the StudyId property.</param>
        /// <param name="taskTypeId">Initial value of the TaskTypeId property.</param>
        public static TaskInstance CreateTaskInstance(global::System.Int32 taskInstanceId, global::System.String taskTitle, global::System.String status, global::System.DateTime startDate, global::System.Int32 participantId, global::System.Int32 studyId, global::System.Int32 taskTypeId)
        {
            TaskInstance taskInstance = new TaskInstance();
            taskInstance.TaskInstanceId = taskInstanceId;
            taskInstance.TaskTitle = taskTitle;
            taskInstance.Status = status;
            taskInstance.StartDate = startDate;
            taskInstance.ParticipantId = participantId;
            taskInstance.StudyId = studyId;
            taskInstance.TaskTypeId = taskTypeId;
            return taskInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskInstanceId
        {
            get
            {
                return _TaskInstanceId;
            }
            set
            {
                if (_TaskInstanceId != value)
                {
                    OnTaskInstanceIdChanging(value);
                    ReportPropertyChanging("TaskInstanceId");
                    _TaskInstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskInstanceId");
                    OnTaskInstanceIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskInstanceId;
        partial void OnTaskInstanceIdChanging(global::System.Int32 value);
        partial void OnTaskInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskTitle
        {
            get
            {
                return _TaskTitle;
            }
            set
            {
                OnTaskTitleChanging(value);
                ReportPropertyChanging("TaskTitle");
                _TaskTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskTitle");
                OnTaskTitleChanged();
            }
        }
        private global::System.String _TaskTitle;
        partial void OnTaskTitleChanging(global::System.String value);
        partial void OnTaskTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                OnParticipantIdChanging(value);
                ReportPropertyChanging("ParticipantId");
                _ParticipantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParticipantId");
                OnParticipantIdChanged();
            }
        }
        private global::System.Int32 _ParticipantId;
        partial void OnParticipantIdChanging(global::System.Int32 value);
        partial void OnParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyId
        {
            get
            {
                return _StudyId;
            }
            set
            {
                OnStudyIdChanging(value);
                ReportPropertyChanging("StudyId");
                _StudyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyId");
                OnStudyIdChanged();
            }
        }
        private global::System.Int32 _StudyId;
        partial void OnStudyIdChanging(global::System.Int32 value);
        partial void OnStudyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskTypeId
        {
            get
            {
                return _TaskTypeId;
            }
            set
            {
                OnTaskTypeIdChanging(value);
                ReportPropertyChanging("TaskTypeId");
                _TaskTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskTypeId");
                OnTaskTypeIdChanged();
            }
        }
        private global::System.Int32 _TaskTypeId;
        partial void OnTaskTypeIdChanging(global::System.Int32 value);
        partial void OnTaskTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "ParticipantTaskInstance", "Participant")]
        public Participant Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("MainMenu.ParticipantTaskInstance", "Participant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("MainMenu.ParticipantTaskInstance", "Participant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Participant> ParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("MainMenu.ParticipantTaskInstance", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Participant>("MainMenu.ParticipantTaskInstance", "Participant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "StudyTaskInstance", "Study")]
        public Study Study
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("MainMenu.StudyTaskInstance", "Study").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("MainMenu.StudyTaskInstance", "Study").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Study> StudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("MainMenu.StudyTaskInstance", "Study");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Study>("MainMenu.StudyTaskInstance", "Study", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "TaskTypeTaskInstance", "TaskType")]
        public TaskType TaskType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("MainMenu.TaskTypeTaskInstance", "TaskType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("MainMenu.TaskTypeTaskInstance", "TaskType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskType> TaskTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("MainMenu.TaskTypeTaskInstance", "TaskType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskType>("MainMenu.TaskTypeTaskInstance", "TaskType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "TaskInstanceTaskData", "TaskData")]
        public EntityCollection<TaskData> TaskDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskData>("MainMenu.TaskInstanceTaskData", "TaskData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskData>("MainMenu.TaskInstanceTaskData", "TaskData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainMenu", Name="TaskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskType object.
        /// </summary>
        /// <param name="taskTypeId">Initial value of the TaskTypeId property.</param>
        /// <param name="taskTypeDesc">Initial value of the TaskTypeDesc property.</param>
        public static TaskType CreateTaskType(global::System.Int32 taskTypeId, global::System.String taskTypeDesc)
        {
            TaskType taskType = new TaskType();
            taskType.TaskTypeId = taskTypeId;
            taskType.TaskTypeDesc = taskTypeDesc;
            return taskType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskTypeId
        {
            get
            {
                return _TaskTypeId;
            }
            set
            {
                if (_TaskTypeId != value)
                {
                    OnTaskTypeIdChanging(value);
                    ReportPropertyChanging("TaskTypeId");
                    _TaskTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskTypeId");
                    OnTaskTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskTypeId;
        partial void OnTaskTypeIdChanging(global::System.Int32 value);
        partial void OnTaskTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskTypeDesc
        {
            get
            {
                return _TaskTypeDesc;
            }
            set
            {
                OnTaskTypeDescChanging(value);
                ReportPropertyChanging("TaskTypeDesc");
                _TaskTypeDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskTypeDesc");
                OnTaskTypeDescChanged();
            }
        }
        private global::System.String _TaskTypeDesc;
        partial void OnTaskTypeDescChanging(global::System.String value);
        partial void OnTaskTypeDescChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainMenu", "TaskTypeTaskInstance", "TaskInstance")]
        public EntityCollection<TaskInstance> TaskInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskInstance>("MainMenu.TaskTypeTaskInstance", "TaskInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskInstance>("MainMenu.TaskTypeTaskInstance", "TaskInstance", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
