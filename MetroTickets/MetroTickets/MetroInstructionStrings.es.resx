<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SubTask1_Instructions" xml:space="preserve">
    <value>Usted está en Miami durante una semana y espera utilizar el transporte público ampliamente durante ese tiempo. Usando el dispensador de pase de transporte, compre el pase que va a necesitar durante su estancia aquí, teniendo en mente que usted va a regresar a Miami en 3 meses, y desea utilizar el mismo pase otra vez.</value>
  </data>
  <data name="SubTask2_Instructions" xml:space="preserve">
    <value>Usted está esperando a un amigo para que se reuna con usted en la estación de metro. Usted tiene un pase de metro, pero su amigo no. Como ustedes van a utilizar el sistema de transporte de metro la mayor parte del día, compre un pase para su amigo mientras usted espera por él.</value>
  </data>
  <data name="SubTask3_Instructions" xml:space="preserve">
    <value>Usted no está seguro de la cantidad de dinero que tiene en su Easy Card, pero  quiere asegurarse de que usted tiene $ 30 para que le dure por el resto del mes. Por favor utilice el sistema para asegurarse de ello.</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="IntroMessage" xml:space="preserve">
    <value>Por favor utilice el quiosco del metro para completar las tareas</value>
  </data>
  <data name="ProceedNextTaskPrompt" xml:space="preserve">
    <value>¡Gracias! Por favor proceda con la siguiente tarea</value>
  </data>
  <data name="YourTaskIs" xml:space="preserve">
    <value>Su tarea consiste en</value>
  </data>
  <data name="ToBeginMakeSelection" xml:space="preserve">
    <value>Para empezar, por favor seleccione una de las siguientes opciones:</value>
  </data>
  <data name="BuyCardOrTicket" xml:space="preserve">
    <value>Comprar una tarjeta EASY Card o un boleto EASY Ticket</value>
  </data>
  <data name="OneDayTicket" xml:space="preserve">
    <value>Boleto de 1-Día: Cuesta $ 5.00</value>
  </data>
  <data name="OneDayTicketDetails" xml:space="preserve">
    <value>Viajes ilimitados por un día de calendario
Válido a partir del momento en que usted toca su tarjeta o boleto en un torniquete de Metro o cajero del Metrobus hasta las 2 a.m. del día siguiente.</value>
  </data>
  <data name="OneMonthPass" xml:space="preserve">
    <value>Pase de 1-Mes</value>
  </data>
  <data name="OneMonthPassDetails" xml:space="preserve">
    <value>Disponible a partir del día 20 del mes previo hasta el día 10 del mes para el cual usted está comprando el pase</value>
  </data>
  <data name="OneMonthPassPlusParking" xml:space="preserve">
    <value>Pase de 1-Mes + estacionamiento</value>
  </data>
  <data name="OneMonthPassPlusParkingDetails" xml:space="preserve">
    <value>Disponible a partir del día 20 del mes previo hasta el día 10 del mes para el cual usted está comprando el pase o permiso</value>
  </data>
  <data name="ReturnToMainScreen" xml:space="preserve">
    <value>Volver a la pantalla principal</value>
  </data>
  <data name="SevenDayTicket" xml:space="preserve">
    <value>Boleto de 7-Días: Cuesta $26.00</value>
  </data>
  <data name="SevenDayTicketDetails" xml:space="preserve">
    <value>Viajes ilimitado por siete días consecutivos
 del calendario
Válido a partir del momento en que usted toca su tarjeta o boleto en un torniquete de Metro o cajero del Metrobus.</value>
  </data>
  <data name="TapCardOnReader" xml:space="preserve">
    <value>Para empezar, toque la tarjeta con el lector de abajo:</value>
  </data>
  <data name="BuyEasyCard" xml:space="preserve">
    <value>Comprar una tarjeta EASY Card</value>
  </data>
  <data name="AddCashValue" xml:space="preserve">
    <value>Añadir valor en efectivo</value>
  </data>
  <data name="BuyEasyTicket" xml:space="preserve">
    <value>Comprar un boleto EASY Ticket</value>
  </data>
  <data name="CheckSchedule" xml:space="preserve">
    <value>Consultar Horarios</value>
  </data>
  <data name="CurrentBalance10USD" xml:space="preserve">
    <value>Su saldo actual es de $ 10.</value>
  </data>
  <data name="DayPasses" xml:space="preserve">
    <value>Pases diarios</value>
  </data>
  <data name="LoadCardOrTicket" xml:space="preserve">
    <value>Cargar una tarjeta EASY Card o a un boleto EASY Ticket</value>
  </data>
  <data name="MakeSelectionBelow" xml:space="preserve">
    <value>Haga una selección entre las opciones siguientes:</value>
  </data>
  <data name="BuyEasyTicketDetails" xml:space="preserve">
    <value>Ideal para uso a corto plazo.
-El boleto es válido for solo 60 días a partir de la fecha de compra.
-Cargar con un Pase de 1-Día, un Pase de 7-Días o un Pase de 1-Mes y/o añadir valor en efectivo de hasta $40</value>
  </data>
  <data name="BuyEasyCardDetails" xml:space="preserve">
    <value>La tarjeta es válida por tres años
-Cargar con un Pase de 1-Día, un Pase de 7-Días o un Pase de 1-Mes y/o añadir valor en efectivo hasta $ 150
-Compre una tarjeta EASY Card si está cargando un Pase de 1-Mes o un Pase de 1-Mes con un permiso mensual de estacionamiento en el metro.</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="ThankYouForCompletingTask" xml:space="preserve">
    <value>Gracias por completar esta tarea</value>
  </data>
  <data name="SubtaskMoreTimePrompt" xml:space="preserve">
    <value>¿Necesita más tiempo para completar esta tarea?</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sí</value>
  </data>
</root>