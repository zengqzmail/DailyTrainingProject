<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Continue" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="EarlyPressWarning" xml:space="preserve">
    <value>Por favor, no pulse la tecla hasta que aparezca el objetivo</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="InstructionsPart1" xml:space="preserve">
    <value>* Tarea de tiempo de reacción*

En esta tarea usted estará respondiendo a un cuadrado verde


A veces se le pedirá que presione una tecla cuando aparezca el cuadrado verde

Otras veces se le pedirá que  presione una de las dos teclas dependiendo de dónde aparezca el cuadrado verde

Por favor, trate de ser lo más rápido posible


Instrucciones detalladas seguirán
 a continuación

(presione la barra espaciadora para continuar)</value>
  </data>
  <data name="InstructionsPart2" xml:space="preserve">
    <value>El objetivo lucirá parecido al cuadrado verde de abajo.
(presione la barra espaciadora para continuar)</value>
  </data>
  <data name="InstructionsPart3" xml:space="preserve">
    <value>*Tarea1: Tiempo de Reacción Simple


*Tan pronto como aparezca el cuadrado, presione la tecla B lo más rápido posible


(Asegúrese de que su dedo este en la tecla B ahora. Presione la barra espaciadora para comenzar)</value>
  </data>
  <data name="InstructionsPart4" xml:space="preserve">
    <value>*Tarea 2: complejo de tiempo de reacción*

Esta vez, su tarea será diferente


El cuadrado verde aparecerá al lado izquierdo o derecho de la pantalla


Si aparece el cuadrado de la izquierda, presione la tecla Z (a la izquierda) 

Si aparece el cuadrado de la derecha, presione la tecla / (a la derecha) 

Tan pronto como aparezca el cuadrado, responda lo más rápido posible

(Asegúrese de que tiene un dedo en la tecla Z, y uno en la tecla / antes de comenzar. Presione la barra espaciadora para comenzar ahora.)</value>
  </data>
  <data name="InstructionsPart5" xml:space="preserve">
    <value>*Tarea1 Otra Vez: Tarea de Tiempo de Reacción Simple*

Ahora vamos a hacer de nuevo la tarea de tiempo de reacción
 simple

Usted verá un cuadrado verde aparecer en el centro de la pantalla


Tan pronto como aparezca el cuadrado, presione la tecla B lo más rápido posible 


(Asegúrese de que su dedo este en la tecla B ahora. Presione la barra espaciadora para comenzar)

(Asegúrese de que su dedo está en la tecla B ahora. Presione la barra espaciadora para comenzar)</value>
  </data>
  <data name="ThankYouMessage" xml:space="preserve">
    <value>Gracias por completar esta tarea</value>
  </data>
</root>